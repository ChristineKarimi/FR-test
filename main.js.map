{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/item-list/item-list.component.css","webpack:///./src/app/item-list/item-list.component.html","webpack:///./src/app/item-list/item-list.component.ts","webpack:///./src/app/item.ts","webpack:///./src/app/new-item/new-item.component.css","webpack:///./src/app/new-item/new-item.component.html","webpack:///./src/app/new-item/new-item.component.ts","webpack:///./src/app/store.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \" /* The sidebar menu */\\n .sidenav {\\n    height: 100%; /* Full-height: remove this if you want \\\"auto\\\" height */\\n    width: 140px; /* Set the width of the sidebar */\\n    position: fixed; /* Fixed Sidebar (stay in place on scroll) */\\n    z-index: 1; /* Stay on top */\\n    top: 0; /* Stay at the top */\\n    left: 0;\\n    background-color: rgb(239, 244, 247); /* Black */\\n    overflow-x: hidden; /* Disable horizontal scroll */\\n    padding: 50px;\\n    margin: 0 auto;\\n    overflow: hidden;\\n    \\n    \\n\\n}\\n /* The navigation menu links */\\n .sidenav a {\\n    padding: 10px 8px 6px 16px;\\n    text-decoration: none;\\n    font-size: 18px;\\n    color: #000000;\\n    display: block;\\n}\\n /* When you mouse over the navigation links, change their color */\\n .sidenav a:hover {\\n    width: 300px;\\n    padding-right: 200px;\\n    color: #2a4849;\\n    background-color: #999999;\\n}\\n /* Style page content */\\n .main {\\n    margin-left: 160px; /* Same as the width of the sidebar */\\n    padding: 5px 10px;\\n}\\n /* On smaller screens, where height is less than 450px, change the style of the sidebar (less padding and a smaller font size) */\\n @media screen and (max-height: 450px) {\\n    .sidenav {padding-top: 15px;}\\n    .sidenav a {font-size: 18px;}\\n}\\n img {\\n    width: 50px;\\n    height: 50px;\\n}\"","module.exports = \"\\n <!-- Side navigation -->\\n <div class=\\\"main\\\">\\n <div class=\\\"sidenav\\\">\\n  <a routerLink=\\\"/new-item\\\">Create Item</a>\\n  <a routerLink=\\\"/item-list\\\">Item list</a>\\n</div>\\n\\n<!-- Page content -->\\n<div class=\\\"body\\\">\\n  <router-outlet></router-outlet>\\n  \\n\\n</div> \\n</div>\\n\"","\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { NewItemComponent } from './new-item/new-item.component';\nimport { ItemListComponent } from './item-list/item-list.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewItemComponent,\n    ItemListComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatButtonModule,\n    RouterModule.forRoot([\n      {\n        path: 'new-item',\n        component: NewItemComponent\n      },\n      {\n        path: 'item-list',\n        component: ItemListComponent\n      }\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"img{\\nwidth: 30px;\\n}\\n\\ntd{\\n  cursor: pointer;\\n}\\n\\n.top-modal{\\n  float: left;\\n}\\n\\nhr{\\n  width: 100%;\\n  padding-bottom: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n.vl-right{\\n  border-right: 1px solid #EEEEEE;\\n  height: 500px;\\n}\\n\\n.vl-right p{\\n  padding-top: 10px; \\n}\\n\\n.mid-data p{\\n  padding: 5px;\\n}\\n\\n.modal-data{\\n  display: inline-block !important;\\n  text-align: center;\\n  width: 10em;\\n}\\n\\n/*\\n  ========================================\\n  BUTTONS\\n  ========================================\\n*/\\n\\n.close{\\n  padding: 20px;\\n}\\n\\n.button-left{\\n  text-align: center;\\n}\\n\\n.button{\\n  background-color: #999999;\\n  color: #FFFFFF;\\n  padding: 10px 50px;\\n  margin: 8px 0;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n\\n/*\\n  ========================================\\n  DATA TITLE\\n  ========================================\\n*/\\n\\n.data-title{\\n  font-weight: bold;\\n  text-align: right !important;\\n  margin-right: 15px;\\n}\\n\\n@media (min-width: 768px) {\\n  .modal-dialog {\\n    width: 600px;\\n    margin: 30px auto;\\n  }\\n}\\n\\n@media (min-width: 992px) {\\n  .modal-lg {\\n    width: 900px;\\n  }\\n}\\n\\n@media (min-width: 768px) {\\n  .modal-xl {\\n    width: 90%;\\n   max-width:1200px;\\n  }\\n}\\n\\n/*\\n  ========================================\\n  TABLE\\n  ========================================\\n*/\\n\\ntable{\\n   width: 70%;\\n    margin-left: 80px;\\n  }\\n\\ntd, th {\\n    border-bottom: 1px solid #dddddd;\\n    text-align: left;\\n    padding: 12px;\\n    margin-left: 80px;\\n  }\\n\\n.user-list , p{\\n    padding: 0;\\n    margin: 10px;\\n    margin-left: 80px;\\n  }\\n\\n.user-list p{\\n    padding-bottom: 50px;\\n  }\\n\\nh1 {\\n  padding: 80px;\\n}\"","module.exports = \"<div class=\\\"item-list\\\">\\n    <h1>Item List</h1>\\n    <p>A list of all your items</p>\\n  \\n    <table>\\n      <tr>\\n        <th>Time Created</th>\\n        <th>Client</th>\\n        <th>Rating</th>\\n        <th>Category</th>\\n        <th>Sub Category</th>\\n        <th>Amount</th>\\n      </tr>\\n  \\n      <tr *ngFor=\\\"let item of items\\\" (click)=\\\"open(content)\\\" (click)=\\\"itemDetails(item)\\\">\\n\\n\\n        <td>{{ item.timeCreated }}</td>\\n        <td><span class=\\\"table-img\\\"><img src=\\\"../../assets/images/ppic.png\\\" alt=\\\"\\\"> </span>\\n           {{item.firstname}} {{item.lastname}}</td>\\n\\n        <td>{{item.rating}}</td>\\n        <td>{{item.category}}</td>\\n        <td>{{item.subcategory}}</td>\\n        <td>{{item.amount}}</td>\\n\\n        </tr>\\n  \\n    </table>\\n  </div>\\n\\n  <!-- <div class=\\\"col-md-6 col-md-offset-3\\\">\\n        <td>{{item.amount}}</td>\\n      <p>{{bodyText}}</p>\\n      <button (click)=\\\"openModal('custom-modal-1')\\\">Open Modal</button>\\n  </div> -->\\n\\n  <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\" class=\\\"modal-dialog modal-xl\\\">\\n    <header class=\\\"container\\\">\\n      <div class=\\\"top-modal\\\">\\n        <h4 class=\\\"modal-title\\\">Item Details</h4>\\n        <p>May 18, 2018, 1:59:18PM</p>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </header>\\n    <hr>\\n    <div class=\\\"modal-body container\\\">\\n  \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col vl-right\\\">\\n            <p>{{firstname}} <span> {{lastname}}</span></p>\\n            <small><span><strong>Rating:</strong></span> {{rating}}</small>\\n        </div>\\n        <div class=\\\"col-6 mid-data vl-right\\\">\\n          <p><span class=\\\"data-title\\\">First Name:</span> <span>{{firstname}}</span></p>\\n  \\n          <p><span class=\\\"data-title\\\">Last Name:</span> <span>{{lastname}}</span></p>\\n  \\n          <p><span class=\\\"data-title\\\">Rating:</span> <span>{{rating}}</span></p>\\n  \\n          <p><span class=\\\"data-title\\\">Category:</span> <span>{{category}}</span></p>\\n  \\n          <p><span class=\\\"data-title\\\">Primary Sub Category:</span> <span>{{subcategory}}</span></p>\\n  \\n          <p><span class=\\\"data-title\\\">Amount(KES):</span> <span>{{amount}}</span></p>\\n        </div>\\n        <div class=\\\"col button-left\\\">\\n            <button class=\\\"btn-default button\\\" >EDIT</button>\\n        </div>\\n      </div>\\n  \\n    </div>\\n  </ng-template>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MAT_DIALOG_DATA } from '@angular/material';\nimport { Store } from '../store';\n// import { ModalService } from '../_services';\n\n\n@Component({\n  selector: 'app-item-list',\n  templateUrl: './item-list.component.html',\n  styleUrls: ['./item-list.component.css']\n})\nexport class ItemListComponent implements OnInit {\n\n  items = Store;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n","export class Item {\n\n    firstname:string;\n    lastname:string;\n    rating:string; \n    category:string; \n    subcategory:string; \n    amount:string;\n    timeCreated:string;\n\n    constructor(firstname:string, lastname:string,rating:string, category:string, subcategory:string, amount:string,timeCreated?:string){\n        this.firstname = firstname;\n        this.lastname = lastname;\n        this.rating = rating;\n        this.category = category;\n        this.subcategory = subcategory;\n        this.amount = amount;\n        this.timeCreated = timeCreated;\n    }\n}\n","module.exports = \"img {\\n    width: 70px;\\n    height: 70px;\\n\\n}\\n\\n/*\\n  ========================================\\n  INPUTS\\n  ========================================\\n*/\\n\\n.main-input{\\n    margin-left: 100px;\\n  }\\n\\n.inputs label{\\n    display: inline-block;\\n    width: 10em;\\n  }\\n\\n.inputs{\\n    padding: 10px;\\n  }\\n\\ninput, select{\\n    width: 40%;\\n    padding: 12px 20px;\\n    margin: 8px 0;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n  }\\n\\n.md-input{\\n    width: 40%;\\n    margin: 8px 0;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n  }\\n\\n.md-border{\\n    text-align: center;\\n  }\\n\\nmat-select{\\n    border-bottom-color: transparent !important;\\n  }\\n\\nbutton{\\n    background-color: #999999;\\n    color: #FFFFFF;\\n    padding: 15px 145px;\\n    margin: 8px 0;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n  }\"","module.exports = \"<form class=\\\"form-group\\\" [formGroup]='itemForm'>\\n  <div class=\\\"main-input\\\">\\n  <div class=\\\"inputs client-photo\\\">\\n    <label>Client Photo</label>\\n    <img src=\\\"../../assets/images/ppic.png\\\" alt=\\\"\\\">\\n  </div>\\n  \\n\\n  <div class=\\\"inputs first-name\\\">\\n    <label>First Name</label>\\n    <input type=\\\"text\\\" #firstname formControlName=\\\"firstName\\\">\\n  </div>\\n\\n  <div class=\\\"inputs last-name\\\">\\n    <label>Last Name</label>\\n    <input type=\\\"text\\\" #lastname formControlName=\\\"lastName\\\">\\n  </div>\\n\\n  <div class=\\\"inputs rating-name\\\">\\n    <label>Rating</label>\\n    <select #rating formControlName=\\\"rating\\\">\\n      <option value=1>1</option>\\n      <option value=2>2</option>\\n      <option value=3>3</option>\\n      <option value=4>4</option>\\n      <option value=5>5</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"inputs category\\\">\\n    <label>Category</label>\\n    <select #category formControlName=\\\"category\\\">\\n      <option value=\\\"sports\\\">Running</option>\\n      <option value=\\\"leisure\\\">Jogging</option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"inputs sub-category\\\">\\n    <label>Sub Category</label>\\n    <mat-form-field class=\\\"md-input\\\">\\n      <mat-select class=\\\"md-border\\\" formControlName=\\\"subCategory\\\" #subcategory multiple>\\n        <mat-option *ngFor=\\\"let subcategory of subcategoryList\\\" [value]=\\\"subcategory\\\">{{subcategory}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n\\n\\n  <div class=\\\"inputs amount\\\">\\n    <label>Amount</label>\\n    <input type=\\\"number\\\" #amount formControlName=\\\"amount\\\">\\n  </div>\\n\\n  <div class=\\\"inputs button\\\">\\n    <label></label>\\n    <button on-click=\\\"saveItem(firstname, lastname, rating, category, subcategory, amount)\\\">Submit</button>\\n  </div>\\n  </div>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { Item } from '../item';\nimport { Store } from '../store';\n\n@Component({\n  selector: 'app-new-item',\n  templateUrl: './new-item.component.html',\n  styleUrls: ['./new-item.component.css']\n})\nexport class NewItemComponent implements OnInit {\n  //Declare var type to FormGroup\n  // itemForm: FormGroup;\n\n  itemForm = new FormGroup({\n    firstName: new FormControl(),\n    lastName: new FormControl(),\n    category : new FormControl(),\n    subCategory : new FormControl(),\n    amount : new FormControl(),\n    rating:new FormControl(),\n   })\n\n  item = Store;\n\n  \n\n  subcategoryList = ['Sports', 'Leisure', 'Office']\n\n  //Adding form builder service to constructor\n  // constructor(private fb: FormBuilder) { }\n\n  saveItem(firstname: HTMLInputElement, lastname: HTMLInputElement, rating: HTMLInputElement, category: HTMLInputElement, subcategory: HTMLInputElement, amount: HTMLInputElement,timeCreated?:string): boolean {\n    \n    let t_secs = new Date();\n    // let t_day:number = t_secs.getTime()/1000;\n    let t_day = new Date().toLocaleTimeString();\n\n    this.item.push(new Item(firstname.value, lastname.value, rating.value, category.value, subcategory.value, amount.value,t_day));\n\n    t_day=null;\n    firstname.value='';\n    lastname.value='';\n    rating.value='';\n    category.value='';\n    subcategory.value='';\n    amount.value='';\n\n    return false;\n  }\n\n  ngOnInit() {\n \n\n  }\n\n}\n","import { Item } from './item'\n\nexport const Store: Item[] = [new Item('christine', 'karimi','5','jogging','leisure,office','2200',new Date().toLocaleTimeString())]\n                             ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}